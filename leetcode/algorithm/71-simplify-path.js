/**
 * 71. 简化路径
 *
 * 给你一个字符串 path ，表示指向某一文件或目录的 Unix 风格 绝对路径 （以 '/' 开头），请你将其转化为更加简洁的规范路径。
 *
 * 在 Unix 风格的文件系统中，一个点（.）表示当前目录本身；此外，两个点 （..） 表示将目录切换到上一级（指向父目录）；两者都可以是复杂相对路径的组成部分。任意多个连续的斜杠（即，'//'）都被视为单个斜杠 '/' 。 对于此问题，任何其他格式的点（例如，'...'）均被视为文件/目录名称。
 *
 * 请注意，返回的 规范路径 必须遵循下述格式：
 *  * 始终以斜杠 '/' 开头。
 *  * 两个目录名之间必须只有一个斜杠 '/' 。
 *  * 最后一个目录名（如果存在）不能 以 '/' 结尾。
 *  * 此外，路径仅包含从根目录到目标文件或目录的路径上的目录（即，不含 '.' 或 '..'）。
 *
 * 返回简化后得到的 规范路径 。
 */

/**
 * 大部分是变为正确的路径吧
 *
 * 有点没有切入点,主要是感觉情况会非常的多
 *
 * 思路错误~~估计也是万变不离其宗,问题的格式就那么几种,点位置需要处理,多余 / 需要处理,
 * 所以简化路径就是给的路径必须是正确的,那么问题的情况就那么几种
 * @param {string} path
 * @return {string}
 */
var simplifyPath = function (path) {
  let resutl = [];
  let pathArr = path.split("/");
  for (const iten of pathArr) {
    // 返回上一级,那就是去掉最后的
    if (".." === iten) {
      if (resutl.length) {
        resutl.pop();
      }
      //
    } else if (iten !== ".") {
      iten && resutl.push(iten);
    }
  }

  return "/" + resutl.join("/");
};
