/**
 * 420. 强密码检验器
 *
 * 如果一个密码满足下述所有条件，则认为这个密码是强密码：
 *  * 由至少 6 个，至多 20 个字符组成。
 *  * 至少包含 一个小写 字母，一个大写 字母，和 一个数字 。
 *  * 同一字符 不能 连续出现三次 (比如 "...aaa..." 是不允许的, 但是 "...aa...a..." 如果满足其他条件也可以算是强密码)。
 *
 * 给你一个字符串 password ，返回 将 password 修改到满足强密码条件需要的最少修改步数。如果 password 已经是强密码，则返回 0 。
 * 在一步修改操作中，你可以：
 *  * 插入一个字符到 password ，
 *  * 从 password 中删除一个字符，或
 *  * 用另一个字符来替换 password 中的某个字符。
 */
/**
 * 官方题解: 分类讨论
 * 
 * 分成三类讨论
 *  * 长度严格小于6
 *  * 长度在[6,20]
 *  * 长度严格大于 20
 * 
 * 给出了三种操作:
 *  1. 添加一个字符
 *  2. 替换一个字符
 *  3. 删除一个字符
 * 
 * * 当给定的字符串长度严格小于6时,「删除一个字符」操作没有意义.这样一来,如果字符串中出现不超过四个连续相同的字符,「替换一个字符」的操作也是没有意义的,
 *  因为「替换一个字符」的目的只可能是将连续相同的字符中间的 某个字符替换成不同字符,而这个数量不超过4时,在中间的位置添加一个不同的字符,更好. 如果字符串
 *  中出现了5个连续相同的字符,「替换一个字符」的操作也是没有意义的,因为此时字符的种类只有一种,至少需要两次操作才能达成字符种类的要求.而在中间字符两侧分别添加
 *  不同种类的字符就符合要求且操作次数最少. 所以在这种情况下,只有「添加一个字符」是有意义的,操作次数为 6-n 和 3-(字符种类)中的较大值
 * 
 * * 当给定的字符串长度在[6,20]范围内,,「添加一个字符」和「删除一个字符」的操作没有意义,因为在长度已经满足要求的前提下,只需要满足: ① 包含全部的3类字符;
 *  ② 同一个字符不连续出现三次. 所以不能添加和删除,最好是进行 替换 操作,保证了字符串的长度是达标的,且不符合  ①②条件的字符都可以用 替换修改. 因此,只需要
 *  考虑「替换一个字符」这一种操作就可以.对与连续的 k 个相同的字符,可以替换其中[k/3]个,使得不存在3个连续相同的字符.同时还需要保证最终字符串包含全部的3类字符串,
 *  因此替换操作的次数为(所有的[k/3]之和)与 3 - (字符种类)中的较大值
 * 
 * * 同理在字符串大于20时,「添加一个字符」操作是没有意义的.「替换一个字符」要看「删除一个字符」操作把字符串缩减到20以后是否还有连续的字符,也就是需要删除的重复
 *  字符是否大于 n-20 ,是的话减少到20之后还要加上替换的(接着删也可以,但是四个往上连续字符就得删到小于三个,操作过多)
 * @param {string} password
 * @return {number}
 */
var strongPasswordChecker = function (password) {
};
