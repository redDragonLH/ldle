/**
 * 68. 文本左右对齐
 *
 * 给定一个单词数组和一个长度 maxWidth，重新排版单词，使其成为每行恰好有 maxWidth 个字符，且左右两端对齐的文本。
 *
 * 你应该使用“贪心算法”来放置给定的单词；也就是说，尽可能多地往每行中放置单词。必要时可用空格 ' ' 填充，使得每行恰好有 maxWidth 个字符。
 *
 * 要求尽可能均匀分配单词间的空格数量。如果某一行单词间的空格不能均匀分配，则左侧放置的空格数要多于右侧的空格数。
 *
 * 文本的最后一行应为左对齐，且单词之间不插入额外的空格。
 *
 * 说明:
 *  * 单词是指由非空格字符组成的字符序列。
 *  * 每个单词的长度大于 0，小于等于 maxWidth。
 *  * 输入单词数组 words 至少包含一个单词。
 */

/**
 * 官方题解: 模拟
 * 
 * 说白了就是按照给定的字符串最大值,确定一行的单词和字符总数,然后计算需要多少空格,把空格分配到空隙中,注意一下各个状态见的不同就行
 * @param {string[]} words
 * @param {number} maxWidth
 * @return {string[]}
 */