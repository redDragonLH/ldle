/**
 * 331. 验证二叉树的前序序列化
 * 
 * 序列化二叉树的一种方法是使用前序遍历。当我们遇到一个非空节点时，我们可以记录下这个节点的值。如果它是一个空节点，我们可以使用一个标记值记录，例如 #。
 */

/**
 * 前序遍历: 根结点-> 左子树->右子树
 * 
 * 没想明白~~~怎样判断,除非重构二叉树
 * @param {string} preorder
 * @return {boolean}
 */
var isValidSerialization = function(preorder) {

};

/**
 * 官方题解: 栈
 * 
 * 定义一个概念叫 槽位,一个槽位可以被看作「当前二叉树中正在等待被节点填充」的那些位置
 * 
 * 二叉树的建立也伴随着槽位数量的变化。每当遇到一个节点时：
 *  * 如果遇到了空节点，则要消耗一个槽位；
 *  * 如果遇到了非空节点，则除了消耗一个槽位外，还要再补充两个槽位。
 * 
 * 我们使用栈来维护槽位的变化。栈中的每个元素，代表了对应节点处剩余槽位的数量，而栈顶元素就对应着下一步可用的槽位数量。
 * 当遇到空节点时，仅将栈顶元素减 11；当遇到非空节点时，将栈顶元素减 11 后，再向栈中压入一个 22。无论何时，如果栈顶元素变为 00，就立刻将栈顶弹出。
 * 
 * 遍历结束后，若栈为空，说明没有待填充的槽位，因此是一个合法序列；否则若栈不为空，则序列不合法。此外，在遍历的过程中，若槽位数量不足，则序列不合法。
 * 
 * >>>> 这个槽位到底是什么原理
 */